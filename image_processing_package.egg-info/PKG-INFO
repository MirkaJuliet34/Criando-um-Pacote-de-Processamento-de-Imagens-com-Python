Metadata-Version: 2.1
Name: image-processing-package
Version: 0.1.1
Summary: Pacote para processamento b√°sico de imagens
Home-page: https://github.com/seuusuario/image-processing-package
Author: Seu Nome
Author-email: Seu Nome <seu_email@example.com>
License: Apache-2.0
Project-URL: Homepage, https://github.com/seuusuario/image-processing-package
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.6
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: Pillow

# Image Processing Package

Este √© um pacote Python para aplicar filtros e transforma√ß√µes em imagens utilizando a biblioteca Pillow.

## Instala√ß√£o

```bash
pip install image-processing-package

```
## Funcionalidades

- apply_blur(image): Aplica um filtro de desfoque na imagem.
- resize_image(image, size): Redimensiona a imagem para um tamanho especificado.

## Exemplo de uso

```from image_processing_package.filters import apply_blur
from PIL import Image

# Carregar imagem
image = Image.open('imagem.jpg')

# Aplicar desfoque
blurred_image = apply_blur(image)
blurred_image.show()
```
### **Passo 5: Criando Distribui√ß√µes** üì¶

Certifique-se de ter o `setuptools`, `wheel` e `twine` instalados:

```bash
python -m pip install --upgrade pip
python -m pip install --user setuptools wheel twine
```
### Crie as distribui√ß√µes

```
python setup.py sdist bdist_wheel

```

### Publicando no Test PyPI üóÇÔ∏è

Crie uma conta no Test PyPI:

- Test PyPI Register

Depois de criar a conta, fa√ßa o upload do pacote:

```
python -m twine upload --repository-url https://test.pypi.org/legacy/ dist/*
```
Teste a instala√ß√£o do pacote no Test PyPI:

```
pip install --index-url https://test.pypi.org/simple/ image-processing-package
```
### Publicando no PyPI Oficial üåç

Crie uma conta no PyPI:

- PyPI Register

Depois de registrado, suba o pacote no PyPI oficial:

```
python -m twine upload --repository-url https://upload.pypi.org/legacy/ dist/*
```
Agora, qualquer pessoa pode instalar o seu pacote diretamente do PyPI:

```
pip install image-processing-package
```
### Testando e Atualizando o Pacote üß™

Para garantir que tudo funcione, pode-se criar testes automatizados com pytest ou outro framework de sua escolha. Os testes podem estar na pasta tests/.
